{"version":3,"sources":["./src/app/account/account.component.html","./src/app/account/login/login.component.html","./src/app/account/register/register.component.html","./src/app/account/account-routing.module.ts","./src/app/account/account.component.css","./src/app/account/account.component.ts","./src/app/account/account.module.ts","./src/app/account/account.router.activate.ts","./src/app/account/login/login.component.css","./src/app/account/login/login.component.ts","./src/app/account/login/login.service.ts","./src/app/account/register/register.component.css","./src/app/account/register/register.component.ts","./src/app/account/register/register.service.ts"],"names":[],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"account-container\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","module.exports = \"<mat-card class=\\\"account-login-card\\\">\\n    <div style=\\\"padding: 10px 0; width: 100%;\\\">\\n        <div routerLink=\\\"/landing\\\" style=\\\"cursor: pointer; text-align: center\\\">\\n            <b style=\\\"font-size: 20px;\\\">\\n                <img src=\\\"../../assets/img/logo.png\\\" height=\\\"70\\\" />\\n                <br />\\n                Ayuda Card\\n            </b>\\n        </div>\\n    </div>\\n    <br />\\n    <mat-divider></mat-divider>\\n    <mat-card-content style=\\\"padding: 15px;\\\">\\n        <form (ngSubmit)=\\\"login()\\\">\\n            <br />\\n            <mat-form-field [hideRequiredMarker]=\\\"true\\\" [floatLabel]=\\\"'always'\\\" style=\\\"width: 100%\\\">\\n                <input matInput #inputUsername maxlength=\\\"50\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" id=\\\"inpUsername\\\"\\n                    [(ngModel)]=\\\"loginModel.UserName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                <mat-hint align=\\\"end\\\">{{ inputUsername.value?.length || 0 }}/50</mat-hint>\\n            </mat-form-field>\\n            <mat-form-field [hideRequiredMarker]=\\\"true\\\" [floatLabel]=\\\"'always'\\\" style=\\\"width: 100%\\\">\\n                <input matInput #inputPassword maxlength=\\\"50\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"inpPassword\\\"\\n                    [(ngModel)]=\\\"loginModel.Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                <mat-hint align=\\\"end\\\">{{ inputPassword.value?.length || 0 }}/50</mat-hint>\\n            </mat-form-field>\\n            <br /><br />\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" id=\\\"btnLogin\\\">\\n                <fa-icon icon=\\\"key\\\" fixedWidth=\\\"true\\\"></fa-icon> Login\\n            </button>\\n        </form>\\n    </mat-card-content>\\n    <mat-divider></mat-divider>\\n    <mat-card-actions style=\\\"padding: 10px 0; text-align: center\\\">\\n        <small>AYUDA Card V.1.083020191640.NOR</small>\\n    </mat-card-actions>\\n</mat-card>\"","module.exports = \"<p>register works!</p>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountComponent } from './account.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { AccountRouterActivate } from './account.router.activate';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [\n      AccountRouterActivate\n    ],\n    component: AccountComponent,\n    children: [\n      {\n        path: '',\n        canActivate: [\n          AccountRouterActivate\n        ],\n        component: LoginComponent\n      },\n      {\n        path: 'login',\n        canActivate: [\n          AccountRouterActivate\n        ],\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        canActivate: [\n          AccountRouterActivate\n        ],\n        component: RegisterComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// Angular Modules\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Routing\nimport { AccountRouterActivate } from './account.router.activate';\n\n// Material\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\n\n// Components\nimport { AccountComponent } from './account.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n// Services\nimport { LoginService } from './login/login.service'\nimport { RegisterService } from './register/register.service'\n\n// Other Modules\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AccountComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AccountRoutingModule,\n    FontAwesomeModule,\n    MatCardModule, MatButtonModule, MatInputModule, MatFormFieldModule, MatDividerModule\n  ],\n  providers: [\n    AccountRouterActivate,\n    LoginService,\n    RegisterService\n  ]\n})\nexport class AccountModule { }\n","import { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AccountRouterActivate implements CanActivate {\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate() {\r\n    if (localStorage.getItem(\"access_token\") != null) {\r\n      this.router.navigate([\"/software/dashboard\"]);\r\n\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { LoginModel } from './login.model';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  public loginSub: any;\n  public loginModel: LoginModel = {\n    UserName: \"\",\n    Password: \"\"\n  };\n\n  public login(): void {\n    let btnLogin: Element = document.getElementById(\"btnLogin\");\n    btnLogin.setAttribute(\"disabled\", \"disabled\");\n    btnLogin.setAttribute(\"value\", \"Signing in...\");\n\n    let inpUsername: Element = document.getElementById(\"inpUsername\");\n    inpUsername.setAttribute(\"disabled\", \"disabled\");\n\n    let inpPassword: Element = document.getElementById(\"inpPassword\");\n    inpPassword.setAttribute(\"disabled\", \"disabled\");\n\n    if ((<HTMLInputElement>inpUsername).value === \"\" || (<HTMLInputElement>inpPassword).value === \"\") {\n      this.toastr.error('Username or Password is empty. Please do not leave blanks.', 'Error');\n\n      btnLogin.removeAttribute(\"disabled\");\n      btnLogin.setAttribute(\"value\", \"Sign in\");\n      inpUsername.removeAttribute(\"disabled\");\n      inpPassword.removeAttribute(\"disabled\");\n    } else {\n      this.loginService.login(this.loginModel.UserName, this.loginModel.Password);\n      this.loginSub = this.loginService.loginObservable.subscribe(\n        data => {\n          if (data[0]) {\n            this.toastr.success(data[1], 'Success');\n\n            setTimeout(() => {\n              this.router.navigate(['/software']);\n            }, 500);\n          } else {\n            this.toastr.error(data[1], 'Error');\n\n            btnLogin.removeAttribute(\"disabled\");\n            btnLogin.setAttribute(\"value\", \"Sign in\");\n            inpUsername.removeAttribute(\"disabled\");\n            inpPassword.removeAttribute(\"disabled\");\n          }\n\n          if (this.loginSub != null) this.loginSub.unsubscribe();\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.loginSub != null) this.loginSub.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../../../app/app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n  \n  public defaultAPIHostURL: string = this.appSettings.APIURLHost;\n\n  public loginSource = new Subject<[boolean, string]>();\n  public loginObservable = this.loginSource.asObservable();\n\n  public login(username: string, password: string): void {\n    let url = this.defaultAPIHostURL + '/token';\n    let body = \"username=\" + username + \"&password=\" + password + \"&grant_type=password\";\n    let options = { headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' }) };\n\n    this.httpClient.post(url, body, options).subscribe(\n      response => {\n        localStorage.setItem('access_token', response[\"access_token\"]);\n        localStorage.setItem('expires_in', response[\"expires_in\"]);\n        localStorage.setItem('token_type', response[\"token_type\"]);\n        localStorage.setItem('username', response[\"userName\"]);\n\n        this.loginSource.next([true, \"Login Successful.\"]);\n      },\n      error => {\n        this.loginSource.next([false, error[\"error\"].error_description]);\n      }\n    )\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor() { }\n}\n"],"sourceRoot":"webpack:///"}